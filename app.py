# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BMMfDiL26gMkertiV-QGneVpKvLyhCvD
"""

import gradio as gr
import xgboost as xgb
import pandas as pd
import numpy as np

import pickle

# Load the saved XGBoost model
with open('best_xgb_model.pkl', 'rb') as file:
    best_xgb_model = pickle.load(file)


def predict_attack(input_data):
    # Convert input_data to DataFrame
    input_df = pd.DataFrame([input_data], columns=X_train.columns)

    # Make prediction using the trained XGBoost model
    prediction = best_xgb_model.predict(input_df)[0]

    # Return the prediction
    if prediction == 1:
        return "Attack"
    else:
        return "Benign"

# Create a Gradio interface
iface = gr.Interface(
    fn=predict_attack,
    inputs=gr.Dataframe(
        headers=list(X_train.columns),
        row_count=(1, "dynamic"),
        col_count=(len(X_train.columns), "fixed")
    ), # Use a Dataframe input to match your model's input format
    outputs=gr.Textbox(label="Prediction"),
    title="Network Intrusion Detection",
    description="Enter network traffic features to predict attack or benign traffic.",
    examples=[
        list(X_train.iloc[i].values) for i in range(5) # Provide a few example inputs
    ]
)

iface.launch(share=True)